Patch designed for OpenBSD 6.8-STABLE

Index: sbin/Makefile
===================================================================
RCS file: /cvs/src/sbin/Makefile,v
retrieving revision 1.108
diff -u -p -r1.108 Makefile
--- sbin/Makefile	25 Apr 2019 22:11:35 -0000	1.108
+++ sbin/Makefile	30 Apr 2021 09:31:47 -0000
@@ -4,7 +4,7 @@ SUBDIR=	atactl badsect bioctl clri dhcli
 	disklabel dmesg dump dumpfs fdisk fsck fsck_ext2fs fsck_ffs  \
 	fsck_msdos fsdb fsirand growfs ifconfig iked init ipsecctl  \
 	isakmpd kbd ldattach mknod mount \
-	mount_cd9660 mount_ext2fs mount_ffs mount_msdos \
+	mount_cd9660 mount_cwfs mount_ext2fs mount_ffs mount_msdos \
 	mount_nfs mount_ntfs mount_tmpfs mount_udf \
 	mount_vnd mountd ncheck_ffs newfs newfs_ext2fs newfs_msdos \
 	nfsd nologin pdisk pfctl pflogd ping quotacheck \
Index: share/man/man4/options.4
===================================================================
RCS file: /cvs/src/share/man/man4/options.4,v
retrieving revision 1.267
diff -u -p -r1.267 options.4
--- share/man/man4/options.4	5 Nov 2019 07:53:58 -0000	1.267
+++ share/man/man4/options.4	30 Apr 2021 09:31:47 -0000
@@ -171,6 +171,12 @@ standard file system used on many CD-ROM
 It also supports Joliet extensions.
 See
 .Xr mount_cd9660 8 .
+.It Cd option CWFS
+Includes code for the course work file system.
+See
+.Xr mount_cwfs 8 .
+.It Cd option CWFS_DEBUG
+Includes code for debugging the course work file system.
 .It Cd option EXT2FS
 Includes code implementing the Second Extended File System
 .Em ( EXT2FS ) ,
Index: share/man/man5/fstab.5
===================================================================
RCS file: /cvs/src/share/man/man5/fstab.5,v
retrieving revision 1.53
diff -u -p -r1.53 fstab.5
--- share/man/man5/fstab.5	10 Sep 2015 17:55:21 -0000	1.53
+++ share/man/man5/fstab.5	30 Apr 2021 09:31:47 -0000
@@ -100,6 +100,8 @@ The system currently supports the follow
 .Bl -tag -width indent -offset indent -compact
 .It cd9660
 An ISO 9660 CD-ROM filesystem.
+.It cwfs
+A course work filesystem.
 .It ext2fs
 A local Linux compatible ext2fs
 filesystem.
Index: share/man/man8/man8.amd64/MAKEDEV.8
===================================================================
RCS file: /cvs/src/share/man/man8/man8.amd64/MAKEDEV.8,v
retrieving revision 1.88
diff -u -p -r1.88 MAKEDEV.8
--- share/man/man8/man8.amd64/MAKEDEV.8	23 Jan 2020 02:59:24 -0000	1.88
+++ share/man/man8/man8.amd64/MAKEDEV.8	30 Apr 2021 09:31:47 -0000
@@ -209,6 +209,9 @@ Video frame grabbers, see
 .It Ar bpf
 Berkeley Packet Filter, see
 .Xr bpf 4 .
+.It Ar cw
+Course work, see
+.Xr cw 4 .
 .It Ar dt
 Dynamic Tracer, see
 .Xr dt 4 .
Index: share/man/man8/man8.i386/MAKEDEV.8
===================================================================
RCS file: /cvs/src/share/man/man8/man8.i386/MAKEDEV.8,v
retrieving revision 1.115
diff -u -p -r1.115 MAKEDEV.8
--- share/man/man8/man8.i386/MAKEDEV.8	23 Jan 2020 02:59:25 -0000	1.115
+++ share/man/man8/man8.i386/MAKEDEV.8	30 Apr 2021 09:31:47 -0000
@@ -209,6 +209,9 @@ Video frame grabbers, see
 .It Ar bpf
 Berkeley Packet Filter, see
 .Xr bpf 4 .
+.It Ar cw
+Course work, see
+.Xr cw 4 .
 .It Ar dt
 Dynamic Tracer, see
 .Xr dt 4 .
Index: lib/libc/sys/mount.2
===================================================================
RCS file: /cvs/src/lib/libc/sys/mount.2,v
retrieving revision 1.49
diff -u -p -r1.49 mount.2
--- lib/libc/sys/mount.2	8 Jul 2019 18:48:30 -0000	1.49
+++ lib/libc/sys/mount.2	30 Apr 2021 09:31:47 -0000
@@ -144,6 +144,22 @@ struct iso_args {
 #define	ISOFSMNT_SESS	  0x00000010 /* use iso_args.sess */
 .Ed
 .Pp
+.Dv MOUNT_CWFS
+.Bd -literal -offset indent -compact
+#define CWFS_ARGS_VERSION       1
+struct cwfs_args {
+      int       cwa_version;	                /* must be CWFS_ARGS_VERSION */
+
+      char     *cwa_fspec;                     /* block special device to mount */
+      struct    export_args cwa_export_info;   /* network export information */
+
+      /* Root node attributes. */
+      uid_t     cwa_root_uid;
+      gid_t     cwa_root_gid;
+      mode_t    cwa_root_mode;
+};
+.Ed
+.Pp
 .Dv MOUNT_FFS
 .Bd -literal -offset indent -compact
 struct ufs_args {
Index: etc/MAKEDEV.common
===================================================================
RCS file: /cvs/src/etc/MAKEDEV.common,v
retrieving revision 1.113
diff -u -p -r1.113 MAKEDEV.common
--- etc/MAKEDEV.common	12 Feb 2021 10:26:33 -0000	1.113
+++ etc/MAKEDEV.common	30 Apr 2021 09:31:47 -0000
@@ -521,6 +521,8 @@ __devitem(rmidi, rmidi*, Raw MIDI device
 _mcdev(rmidi, rmidi*, rmidi, {-major_rmidi_c-}, 660 _sndiop)dnl
 __devitem(diskmap, diskmap, Disk mapper, diskmap)dnl
 _mkdev(diskmap, diskmap, {-M diskmap c major_diskmap_c 0 640 operator-})dnl
+__devitem(cw, cw, Course work, cw)dnl
+_mkdev(cw, cw, {-M cw c major_cw_c 0 666 wheel-})dnl
 __devitem(pppx, pppx*, PPP Multiplexer, pppx 4)dnl
 _mcdev(pppx, pppx*, pppx, {-major_pppx_c-}, 600)dnl
 __devitem(pppac, pppac*, PPP Access Concentrator, pppac 4)dnl
Index: sbin/mount/mount.c
===================================================================
RCS file: /cvs/src/sbin/mount/mount.c,v
retrieving revision 1.73
diff -u -p -r1.73 mount.c
--- sbin/mount/mount.c	19 Jul 2019 15:13:17 -0000	1.73
+++ sbin/mount/mount.c	30 Apr 2021 09:31:47 -0000
@@ -598,6 +598,15 @@ prmount(struct statfs *sf)
 			(void)printf("%s%s", !f++ ? " (" : ", ", "gens");
 		if (iso_args->flags & ISOFSMNT_EXTATT)
 			(void)printf("%s%s", !f++ ? " (" : ", ", "extatt");
+	} else if (strcmp(sf->f_fstypename, MOUNT_CWFS) == 0) {
+		struct cwfs_args *cwfs_args = &sf->mount_info.cwfs_args;
+
+		if (verbose || cwfs_args->cwa_root_uid || cwfs_args->cwa_root_gid)
+			(void)printf("%s%s=%u, %s=%u", !f++ ? " (" : ", ",
+			    "uid", cwfs_args->cwa_root_uid, "gid", cwfs_args->cwa_root_gid);
+		if (verbose || cwfs_args->cwa_root_mode != 040755)
+			(void)printf("%s%s=%04o", !f++ ? " (" : ", ",
+			    "mode", cwfs_args->cwa_root_mode & 07777);
 	} else if (strcmp(sf->f_fstypename, MOUNT_TMPFS) == 0) {
 		struct tmpfs_args *tmpfs_args = &sf->mount_info.tmpfs_args;
 
Index: sbin/mount_cwfs/Makefile
===================================================================
RCS file: sbin/mount_cwfs/Makefile
diff -N sbin/mount_cwfs/Makefile
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ sbin/mount_cwfs/Makefile	30 Apr 2021 09:31:47 -0000
@@ -0,0 +1,16 @@
+#	$OpenBSD$
+
+.include <bsd.own.mk>
+
+PROG=		mount_cwfs
+SRCS=		mount_cwfs.c getmntopts.c
+MAN=		mount_cwfs.8
+
+MOUNT=		${.CURDIR}/../mount
+.PATH:		${MOUNT}
+
+CPPFLAGS+=	-I${MOUNT}
+DPADD+=		${LIBUTIL}
+LDADD+=		-lutil
+
+.include <bsd.prog.mk>
Index: sbin/mount_cwfs/mount_cwfs.8
===================================================================
RCS file: sbin/mount_cwfs/mount_cwfs.8
diff -N sbin/mount_cwfs/mount_cwfs.8
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ sbin/mount_cwfs/mount_cwfs.8	30 Apr 2021 09:31:47 -0000
@@ -0,0 +1,97 @@
+.\"	$OpenBSD$
+.\"
+.\" Copyright (c) YYYY YOUR NAME HERE <user@your.dom.ain>
+.\"
+.\" Permission to use, copy, modify, and distribute this software for any
+.\" purpose with or without fee is hereby granted, provided that the above
+.\" copyright notice and this permission notice appear in all copies.
+.\"
+.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
+.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
+.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
+.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
+.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
+.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
+.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
+.\"
+.Dd $Mdocdate: June 1 2021 $
+.Dt MOUNT_CWFS 8
+.Os
+.Sh NAME
+.Nm mount_cwfs
+.Nd mount an efficient memory file system
+.Sh SYNOPSIS
+.Nm
+.Op Fl g Ar group
+.Op Fl m Ar mode
+.Op Fl o Ar options
+.Op Fl u Ar user
+.Ar cwfs
+.Ar mount_point
+.Sh DESCRIPTION
+The
+.Nm
+command attaches an instance of the efficient memory file system to the
+global file system namespace.
+The
+.Ar cwfs
+parameter only exists for compatibility with the other mount commands and
+is ignored.
+The directory specified by
+.Ar mount_point
+is converted to an absolute path before use and its attributes (owner,
+group and mode) are inherited unless explicitly overridden by the options
+described below.
+.Pp
+The following options are supported:
+.Bl -tag -width XoXoptions
+.It Fl g Ar group
+Specifies the group name or GID of the root inode of the file system.
+Defaults to the mount point's GID.
+.It Fl m Ar mode
+Specifies the mode (in octal notation) of the root inode of the file system.
+Defaults to the mount point's mode.
+.It Fl o Ar options
+Options are specified with a
+.Fl o
+flag followed by a comma-separated string of options.
+See the
+.Xr mount 8
+man page for possible options and their meanings.
+.It Fl u Ar user
+Specifies the user name or UID of the root inode of the file system.
+Defaults to the mount point's UID.
+.El
+.Sh EXAMPLES
+The following command mounts a cwfs instance over the
+.Pa /mnt
+directory, inheriting its owner, group and mode settings:
+.Pp
+.Dl # mount -t cwfs cwfs /mnt
+.Pp
+The following command mounts a cwfs instance over the
+.Pa /mnt
+directory, owned by the
+.Sq joe
+user and belonging to the
+.Sq users
+group, with a restricted 0700 mode:
+.Pp
+.Dl # mount -t cwfs -o -ujoe -o -gusers -o -m0700 cwfs /mnt
+.Pp
+A corresponding
+.Xr fstab 5
+entry, using "swap" as a place holder:
+.Pp
+.Dl swap /mnt cwfs rw,-ujoe,-gusers,-m0700 0 0
+.Sh SEE ALSO
+.Xr fstab 5 ,
+.Xr mount 8
+.Sh HISTORY
+The
+.Nm
+utility was developed as a course work in MIREA - Russian Technology
+University.
+.Sh AUTHORS
+.An First Student Aq Mt fstudent@yandex.ru
+.An Second Student Aq Mt sstudent@mail.ru
Index: sbin/mount_cwfs/mount_cwfs.c
===================================================================
RCS file: sbin/mount_cwfs/mount_cwfs.c
diff -N sbin/mount_cwfs/mount_cwfs.c
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ sbin/mount_cwfs/mount_cwfs.c	30 Apr 2021 09:31:47 -0000
@@ -0,0 +1,217 @@
+/*	$OpenBSD$	*/
+
+/*
+ * Copyright (c) YYYY YOUR NAME HERE <user@your.dom.ain>
+ *
+ * Permission to use, copy, modify, and distribute this software for any
+ * purpose with or without fee is hereby granted, provided that the above
+ * copyright notice and this permission notice appear in all copies.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
+ * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
+ * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
+ * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
+ * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
+ * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
+ * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
+ */
+
+#include <sys/types.h>
+#include <sys/mount.h>
+#include <sys/stat.h>
+
+#include <ctype.h>
+#include <err.h>
+#include <errno.h>
+#include <grp.h>
+#include <mntopts.h>
+#include <pwd.h>
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include <unistd.h>
+#include <limits.h>
+#include <util.h>
+
+#include "mount_cwfs.h"
+
+/* --------------------------------------------------------------------- */
+
+static const struct mntopt mopts[] = {
+	MOPT_STDOPTS,
+	MOPT_WXALLOWED,
+	MOPT_UPDATE,
+	{ NULL },
+};
+
+/* --------------------------------------------------------------------- */
+
+static void	usage(void) __dead;
+static uid_t	a_uid(const char *);
+static gid_t	a_gid(const char *);
+static uid_t	a_gid(const char *);
+static int	a_num(const char *, const char *);
+static mode_t	a_mask(const char *);
+static void	pathadj(const char *, char *);
+
+/* --------------------------------------------------------------------- */
+
+void
+mount_cwfs_parseargs(int argc, char *argv[],
+	struct cwfs_args *args, int *mntflags,
+	char *canon_dev, char *canon_dir)
+{
+	int gidset, modeset, uidset; /* Ought to be 'bool'. */
+	int ch;
+	gid_t gid;
+	uid_t uid;
+	mode_t mode;
+	int64_t cwnumber;
+	struct stat sb;
+
+	/* Set default values for mount point arguments. */
+	memset(args, 0, sizeof(*args));
+	args->cwa_version = CWFS_ARGS_VERSION;
+	*mntflags = 0;
+
+	gidset = 0; gid = 0;
+	uidset = 0; uid = 0;
+	modeset = 0; mode = 0;
+
+	optind = optreset = 1;
+	while ((ch = getopt(argc, argv, "g:m:n:o:s:u:")) != -1 ) {
+		switch (ch) {
+		case 'g':
+			gid = a_gid(optarg);
+			gidset = 1;
+			break;
+
+		case 'm':
+			mode = a_mask(optarg);
+			modeset = 1;
+			break;
+
+		case 'o':
+			getmntopts(optarg, mopts, mntflags);
+			break;
+
+		case 'u':
+			uid = a_uid(optarg);
+			uidset = 1;
+			break;
+
+		case '?':
+		default:
+			usage();
+		}
+	}
+	argc -= optind;
+	argv += optind;
+
+	if (argc != 2)
+		usage();
+
+	strlcpy(canon_dev, argv[0], PATH_MAX);
+	pathadj(argv[1], canon_dir);
+
+	if (stat(canon_dir, &sb) == -1)
+		err(EXIT_FAILURE, "cannot stat `%s'", canon_dir);
+
+	args->cwa_root_uid = uidset ? uid : sb.st_uid;
+	args->cwa_root_gid = gidset ? gid : sb.st_gid;
+	args->cwa_root_mode = modeset ? mode : sb.st_mode;
+}
+
+/* --------------------------------------------------------------------- */
+
+static void
+usage(void)
+{
+	extern char *__progname;
+	(void)fprintf(stderr,
+	    "usage: %s [-g group] [-m mode] [-n nodes] [-o options] [-s size]\n"
+	    "           [-u user] cwfs mount_point\n", __progname);
+	exit(1);
+}
+
+/* --------------------------------------------------------------------- */
+
+int
+mount_cwfs(int argc, char *argv[])
+{
+	struct cwfs_args args;
+	char canon_dev[PATH_MAX], canon_dir[PATH_MAX];
+	int mntflags;
+
+	mount_cwfs_parseargs(argc, argv, &args, &mntflags,
+	    canon_dev, canon_dir);
+
+	if (mount(MOUNT_CWFS, canon_dir, mntflags, &args) == -1)
+		err(EXIT_FAILURE, "cwfs on %s", canon_dir);
+
+	return EXIT_SUCCESS;
+}
+
+int
+main(int argc, char *argv[])
+{
+
+	/* setprogname(argv[0]); */
+	return mount_cwfs(argc, argv);
+}
+
+static uid_t
+a_uid(const char *s)
+{
+	struct passwd *pw;
+
+	if ((pw = getpwnam(s)) != NULL)
+		return pw->pw_uid;
+	return a_num(s, "user");
+}
+
+static gid_t
+a_gid(const char *s)
+{
+	struct group *gr;
+
+	if ((gr = getgrnam(s)) != NULL)
+		return gr->gr_gid;
+	return a_num(s, "group");
+}
+
+static int
+a_num(const char *s, const char *id_type)
+{
+	int id;
+	char *ep;
+
+	id = strtol(s, &ep, 0);
+	if (*ep || s == ep || id < 0)
+		errx(1, "unknown %s id: %s", id_type, s);
+	return id;
+}
+
+static mode_t
+a_mask(const char *s)
+{
+	int rv;
+	char *ep;
+
+	rv = strtol(s, &ep, 8);
+	if (s == ep || *ep || rv < 0)
+		errx(1, "invalid file mode: %s", s);
+	return rv;
+}
+
+static void
+pathadj(const char *input, char *adjusted)
+{
+
+	if (realpath(input, adjusted) == NULL)
+		err(1, "realpath %s", input);
+	if (strncmp(input, adjusted, PATH_MAX)) {
+		warnx("\"%s\" is a relative path.", input);
+		warnx("using \"%s\" instead.", adjusted);
+	}
+}
Index: sbin/mount_cwfs/mount_cwfs.h
===================================================================
RCS file: sbin/mount_cwfs/mount_cwfs.h
diff -N sbin/mount_cwfs/mount_cwfs.h
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ sbin/mount_cwfs/mount_cwfs.h	30 Apr 2021 09:31:47 -0000
@@ -0,0 +1,26 @@
+/*	$OpenBSD$	*/
+
+/*
+ * Copyright (c) YYYY YOUR NAME HERE <user@your.dom.ain>
+ *
+ * Permission to use, copy, modify, and distribute this software for any
+ * purpose with or without fee is hereby granted, provided that the above
+ * copyright notice and this permission notice appear in all copies.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
+ * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
+ * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
+ * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
+ * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
+ * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
+ * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
+ */
+
+#ifndef _SBIN_MOUNT_CWFS_MOUNT_CWFS_H_
+#define _SBIN_MOUNT_CWFS_MOUNT_CWFS_H_
+
+int	mount_cwfs(int, char **);
+void	mount_cwfs_parseargs(int, char **, struct cwfs_args *, int *,
+			     char *, char *);
+
+#endif /* _SBIN_MOUNT_CWFS_MOUNT_CWFS_H_ */
